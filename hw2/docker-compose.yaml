services:

  telegraf:
    platform: linux/amd64
    image: telegraf:1.33.0
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    environment:
      - HOSTNAME=alex-hw2
    entrypoint: "telegraf"
    ports:
      - '127.0.0.1:8125:8125/udp'
    restart: unless-stopped

  influxdb:
    platform: linux/amd64
    image: influxdb:1.11-alpine
    restart: unless-stopped
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    platform: linux/amd64
    image: grafana/grafana:11.4.0
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
  mongo:
    image: mongo:latest 
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    container_name: mongodb
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:7.17.10 
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: configuration.env
    depends_on:
      - mongo
      - elasticsearch
    ports:
      - "8081:8081"

  nginx:
    image: nginx:1.27.3-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

  ab:
    image: jordi/ab
    container_name: apache_benchmark
    depends_on:
      - app
    entrypoint: ["/bin/bash", "-c", "sleep infinity"]

volumes:
  grafana_data: {}
  influxdb_data: {}
  mongo_data: {} 