worker_processes  1;

events {
    worker_connections  1024;
}

http {
    lua_shared_dict cache_purge_lock 10m;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=img_cache:10m inactive=60m use_temp_path=off;

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://nginx_origin;
            proxy_cache img_cache;
            proxy_cache_key "$scheme$proxy_host$request_uri";
            proxy_cache_valid 200 302 1d;
            
            proxy_cache_min_uses 2;

            add_header X-Cache-Status $upstream_cache_status always;
        }

        location /purge {
            content_by_lua_block {
               local uri = ngx.var.arg_file
                if not uri then
                    ngx.say("missing file agr in request")
                    return
                end

                local proxy_host = "nginx_origin"
                local cache_key = ngx.md5(ngx.var.scheme .. proxy_host .. uri)

                local cache_file = "/var/cache/nginx/" 
                                   .. string.sub(cache_key, -1) .. "/" 
                                   .. string.sub(cache_key, -3, -2) .. "/" 
                                   .. cache_key

                local success, exit_code = os.execute("rm -f " .. cache_file)
                if success then
                    ngx.say("Cache purged successfully")
                else
                    ngx.say("Failed to purge cache: ", exit_type, " code ", exit_code)
                end
            }
        }
    }
}
